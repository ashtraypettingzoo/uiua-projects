# Experimental!
# Uiua 0.13.0-dev.2
# https://github.com/ashtraypettingzoo/uiua-projects/blob/main/Wavetables/wavetables.ua
# https://uiua.org/pad?src=

# TODO: high/low pass filters
# TODO: IR importing
# TODO: fix Str (stretch) buzzing
# TODO: Sid (side by side)
# TODO: Shp (waveshape)

S ← 2048                                  # Samples per oscillator
O ← 256                                   # Oscillators per table
T ← ×S O                                  # Samples per table
SU ← ÷2+1                                 # Signed to unsigned
US ← -1×2                                 # Unsigned to signed
OU ← ÷⟜⇡S                                 # Oscillator base, unsigned 0-1
OT ← ×τOU                                 # Oscillator base, trigonometric 0-2π
R ← ↯¤T                                   # Oscillator to table (repeat)
U ← ⍥(⊢⍉↯⊟:⟜÷2⊸⧻)                         # Octave up (for playback only)
GH ← 200                                  # Graph height
C ← ↥¯1↧1                                 # Clamp
SW ← ⊏◿⧻,                                 # Select (wrapped)
SI ← +⊙×⟜-⊃⊃(SW⌊)(SW⌈)(-⊸⌊)               # Select (interpolated)
RI ← SI×⇡:÷,⧻,                            # Resize (interpolated)
CS ← ∿+η                                  # Cosine
NR ← ↧⊸↥                                  # NaN replace
SC ← NR1÷⟜∿                               # Sinc
VB ← ÷-1⟜⇡O                               # Value base
VR ← +⊙×:-⟜:                              # Value range [min, max, values]
GL ← 16                                   # GIF length (frames)
SH ← 200                                  # Spectrum graph height
FV ← ÷2√S                                 # Fourier max value
SV ← +1⌊×÷2Sⁿ2÷⟜⇡÷4S                      # Spectrum index values
IS ← ⨬(&gifs15|&ims)=2⧻△.                 # Show image or gif
SM ← ⇌∧(⊂+⊸⊃⋅∘(×⊙⋅⊢))⊙(:¤°⊂)              # Scan add + multiply
MB ← ÷:1ⁿ16 2                             # Minimum 16-bit value
FT ← ⊃(∠°ℂ)(÷FV⌵)↙+1÷2S fft               # Fourier transform [phase, amp ← wave]
FU ← ◌°ℂ°fft⊂:⍜°ℂ¯↘1⇌↘1.ℂ⊃(×∿)(×CS)⊙(×FV) # Fourier untransform [wave ← phase, amp]
R₀ ← ☇0                                   # Rerank zero
R₁ ← ☇1                                   # Rerank one
V! ← R₁≡^!R₀
VV! ← R₁≡^!R₀⊙R₀
VVA! ← R₁≡^!R₀⊙R₀⊙⊙R₁
VA! ← R₁≡^!R₀⊙R₁
VAA! ← R₁≡^!R₀⊙R₁⊙⊙R₁
A! ← R₁≡^!R₁
AA! ← R₁≡^!R₁⊙R₁

# ---- Convolutions
# Identity (delta) convolution
CId ← ¤¤1

# ---- Table values
# Values (linear) [min, max]
Val ← VR⊙⊙(VB)
# Values (power in) [min, max, base]
ValPI ← VR⊙⊙(ⁿ:VB)
# Values (power out) [min, max, base]
ValPO ← ⇌ValPI:

# ---- Helpers
# Random (min-max) [Min, Max]
Rnd ← +×⚂:⟜-
# Random (min-max) [Min, Max]
RndI ← ⌊Rnd:+1:⍥:<,,

# ---- Wave Operations
# Sum [{Waves/Tables}]
Sum ← °□/+⍚R₁
# Average [{Waves/Tables}]
Avg ← Sum÷⊸⧻
# Amplify [Amount, Wave/Table]
Amp ← VA!×
# Maximize [Wave/Table]
Max ← A!(◌⍥⟜÷≠0.↥∩/↥⟜¯.)
# Phase shift [Amount, Wave/Table]
Phs ← VA!(↻⁅×⧻,)
# Phase shift to zero point [Wave/Table]
Zer ← A!(↻⊗/↧⌵..)
# Bitcrush [Amount (0-1), Wave/Table]
Bit ← VA!(US↧1÷-1:⌊×,SU:⁅ⁿ:2+1×15-:1√↧1↥0)
# Reverse [Wave/Table]
Rev ← A!⇌
# Invert [Wave/Table]
Inv ← A!¯
# Mirror 1st half [Wave/Table]
Mir ← A!(⊂⇌.↙÷2S)
# Fade start & end [Amount (0-1), Wave/Table]
Fad ← VA!(⇌⬚1×⇌:⬚1⟜×÷⧻.⇡⌊÷2×S↥0)
# Crossfade [Amount (0-1), Start Wave/Table, End Wave/Table]
Crs ← VAA!(+⊙(×-:1):⟜×⊙:)
# Stretch [To (0-1), From (0-1), Wave/Table]
Str ← VVA!(⊂⊙RI:-:S⟜RI⊙⊃↙↘∩(↧-1S↥1⁅×S↧1↥0))
# Shift up/down [Amount (¯1-1), Wave/Table]
Shf ← VA!(+)
# Slice [Amount (0-1), Wave/Table]
Slc ← VA!(RI S↯♭⁅↥1×S)
# Speed up/down [Octaves, Wave/Table]
Spd ← VA!(Slcⁿ:2)
# Splice [Amount (0-1), Wave/Table 1, Wave/Table 2]
Spl ← VAA!(⊂⊓↙↘⟜:⁅×S↧1↥0)
# Clip
Clp ← A!(C)
# Wrap [Wave/Table]
Wrp ← A!(US◿+MB1SU)
# Amplutude modulation [Amplitude, Modulator, Carrier]
AM ← VAA!(×+1÷2×-1:)
# Ring modulation [Modulator, Carrier]
RM ← AA!×
# Frequency modulation [Amplitude, Modulator, Carrier]
FM ← VAA!(SI×S+OU×)
# Convolve [Impulse, Wave/Table]
Cnv ← AA!(/+×⍉◫⊙(↯♭):-1⊸+⧻,⧻⟜:)
# Phase randomize [Amount (0-1), Wave/Table]
Phr ← ≡(FU:⊙+:FT):≡×R₁-π×τ⍥(⊂⚂)+1÷2S[]R₀⊙R₁
# Harmonic wave filter [Amount (0-1), Filter Wave/Table, Source Wave/Table]
Hwf ← VAA!(FU⊙×:+1×⊙(-1◌∩FT))
# Downsample [Amount (0-1), Wave/Table]
Dwn ← VA!(
  ⌈÷:S.⁅↥1ⁿ:2+1×-1ₙ2S-:1
  ↯¤S⍉↯⟜÷⟜(≡/+↯⊂:)
)

# ---- Table operations
# Comb filter (feedback) [Amplitude, Harmonic, Table]
TCmb ← ↯O_S SM⊙(⬚0↯⊂⌈÷:T.⁅÷:S⊙R)
# Comb filter (feedforward) [Amplitude, Harmonic, Table]
TCmf ← ↯O_S+×⊙(⊂↯:[0]¤⟜↘⌊÷:¯S⊙(.R))

# ---- Waveforms
# Sine wave [Harmonic]
Sin ← V!(∿×:OT)
# Saw wave [Harmonic]
Saw ← V!(US◿1×:OU)
# Triangle wave [Harmonic]
Tri ← V!(US⌵US◿1+0.25¯×:OU)
# Pulse wave [Harmonic, Duty]
Pul ← VV!(US≤US:Saw)
# Square wave [Harmonic]
Sqr ← V!(Pul:0.5)
# Noise wave []
Nsw ← (☇1US⍥(⊂⚂)S[])

# ---- Tables
# Noise table []
Nst ← (⍥(⊂Nsw)O[])

# ---- Utility
Print ← &pf
Export ← &ap C♭
Test ← &ap U3R C♭
Graph ← IS⍢⊢(=1⧻)≡(⇌⬚1⊞≠⇡GH⁅×-1GH SU U2C)▽=0⇡⌊÷GL O
Image ← &ims↯O_S SU R C♭
ImportImage ← RI O≡RI S⍜⍉≡(÷3/+↙3)◌°img&frab
ImportWave ← R₀ RI S◌◌°audio&frab
ImportTable ← ↯O_S RI T◌◌°audio&frab # Import 256-wave table
TableAverage ← R₁÷O/+↯O_S            # Table to wave [Table]
TableIndex ← R₁⊡↧-1O↥0⁅:↯O_S:        # Table to wave [Index (0-255), Table]
ImageToTable ← US
GraphConv ← Graph A!(⬚0×↯S1)
GraphSpectrum ← IS⍢⊢(=1⧻)≡(⇌⊞≥÷SH⇡SH⊏SV÷FV↙÷2S⌵fft)▽=0⇡⌊÷GL O
GraphSpectrumFull ← IS⍢⊢(=1⧻)≡(⇌⊞≥÷SH⇡SH÷FV⌵fft)▽=0⇡⌊÷GL O

# ---- Sample waveforms/wavetables
Wave₁ ← Avg{Sin3 Amp0.7Sin2 Sin1}
Wave₂ ← AM0.4Sin7 AM0.5Sin2 Sin1
Wave₂ ← Avg{Saw1 (Pul 2 0.2)}
Wave₄ ← Bit0.7 FM0.1Sin7 Sin1
Tbl₁ ← FM(Val 0 1) Sin2 Sin1
Tbl₂ ← Max Avg{Amp(Val 0 1)Sin2 Sin1}
Tbl₃ ← Bit(Val 0 1) Crs(ValPI 0 1 2) Sin1 Sin3

Print "Tbl₃"
Test Tbl₃
Image Tbl₃
Graph Tbl₃
GraphSpectrum Tbl₃
